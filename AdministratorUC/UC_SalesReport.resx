<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAeAAAAHgCAYAAAB91L6VAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAABRfSURBVHhe7dlPy61necZhP1WHNdpJNO3IRhEsWLBULP16
        WvZISLMjdtSREOmk0M/xlq0skpxvdvb7Z61r3fd9Hj84JjsOXNfz+Jxs873vSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZJ0QP/3v//9AADTco/qyoMAwITco7ryIAAwIfeorjwIAEzIPaorDwIAE3KP6sqD
        AMCE3KO68iAAMCH3qK48CABMyD2qKw8CABNyj+rKgwDAhNyjuvIgADAh96iuPAgATMg9qisPAgATco/q
        yoMAwITco7ryIAAwIfeorjwIAEzIPaorDwIAE3KP6sqDAMCE3KO68iAAMCH3qK48CABMyD2qKw8CABNy
        j+rKgwDAhNyjuvIgADAh96iuPAgATMg9qisPAgATco/qyoMAwITco7ryIAAwIfeorjwIAEzIPaorDwIA
        E3KP6sqDAMCE3KO68iAAMCH3qK48CABMyD2qKw8CABNyj+rKgwDAhNyjuvIgADAh96iuPAgATMg9qisP
        AgATco/qyoMAwITco7ryIAAwIfeorjwIAEzIPaorDwIAE3KP6sqDAMCE3KO68iAAMCH3qK48CABMyD2q
        Kw8CABNyj+rKgwDAhNyjuvIgADAh96iuPAgATMg9qisPAgATco/qyoMAwITco7ryIAAwIfeorjwIAEzI
        PaorDwIAE3KP6sqDAMCE3KO68iAAMCH3qK48CABMyD2qKw8CABNyj+rKgwDAhNyjuvIgADAh96iuPAgA
        TMg9qisPAgATco/qyoMAwITco7ryIAAwIfeorjwIAEzIPaorDwIAE3KP6sqDAMCE3KO68iAAMCH3qK48
        CABMyD2qKw8CABNyj+rKgwDAhNyjuvIgADAh96iuPAgATMg9qisPAgATco/qyoMAwITco7ryIAAwIfeo
        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
        ViNsfLmmW42w8d1f7lFdeRD2cu0RNr7cwrVH2PieIfeorjwI+7nWCBtfbulaI2x8z5F7VFcehD29doSN
        LxNeO8LG9yy5R3XlQdjXS0fY+DLppSNsfM+Te1RXHoS9PXeEjS/38NwRNr5nyj2qKw/C/p46wsaXe3rq
        CBvfc+Ue1ZUH4QwfGmHjywo+NMLG92y5R3XlQTjH+0bY+LKS943wz3/564cv//SHR/95zpF7VFcehLPk
        CBtfVpQjbHw75B7VlQfhPJcRNr6s7DLCxrdH7lFdeRDO9O7fo33x+ZtHfw4refv2jX/nWyT3qK48CABM
        yD2qKw8CABNyj+rKgwDAhNyjuvIgADAh96iuPAgATMg9qisPAgATco/qyoMAwITco7ryIAAwIfeorjwI
        AEzIPaorDwIAE3KP6sqDAMCE3KO68iAAMCH3qK48CABMyD2qKw8CABNyj+rKgwDAhNyjuvIgADAh96iu
        PAgATMg9qisPAgATco/qyoMAwITco7ryIAAwIfeorjwIAEzIPaorDwIAE3KP6sqDAMCE3KO68iAAMCH3
        qK48CABMyD2qKw8CABNyj+rKgwDAhNyjuvIgADAh96iuPAgATMg9qisPAgATco/qyoMAwITco7ryIAAw
        IfeorjwIAEzIPaorDwIAE3KP6sqDAMCE3KO68iAAMCH3qK48CABMyD2qKw8CABNyj+rKgwDAhNyjuvIg
        ADAh96iuPAgATMg9qisPAgATco/qyoMAwITco7ryIAAwIfeorjwIAEzIPaorDwIAE3KP6sqDAMCE3KO6
        8iAAMCH3qK48CABMyD2qKw8CABNyj+rKgwDAhNyjuvIgADAh96iuPAgATMg9qisPAgATco/qyoMAwITc
        o7ryIAAwIfeorjwIAEzIPaorDwIAE3KP6sqDAMCE3KO68iAAMCH3qK48CABMyD2qKw8CABNyj+rKgwDA
        hNyjuvIgADAh96iuPAgATMg9qisPAgATco/qyoMAwITco7ryIAAwIfeorjwIAEzIPaorDwIAE3KP6sqD
        AMCE3KO68iAAMCH3qK48CABMyD2qKw8CABNyj+rKgwDAhNyjuvIgADAh96iuPAgATMg9qisPAgATco/q
        yoMAwITco7ryIAAwIfeorjwIAEzIPaorDwIAE3KP6sqDAMCE3KO68iAAMCH3qK48CABMyD2qKw8CABNy
        j+rKgwDAhNyjuvIgADAh96iuPAgATMg9qisPAgATco/qyoMAwITco7ryIAAwIfeorjwIAEzIPaorDwIA
        E3KP6sqDAMCE3KO68iAAMCH3qK48CABMyD2qKw8CABNyj+rKgwDAhNyjuvIgADAh90iSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSpB37f19C/kXyotahAAAAAElFTkSuQmCC
</value>
  </data>
</root>